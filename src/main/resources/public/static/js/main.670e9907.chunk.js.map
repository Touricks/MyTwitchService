{"version":3,"sources":["utils.js","components/MenuItem.js","components/Favorites.js","components/Register.js","components/Login.js","components/PageHeader.js","components/CustomSearch.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["searchGameById","gameId","fetch","concat","then","response","status","Error","json","searchGameByName","gameName","getGameDetails","data","id","favoriteItemUrl","addFavoriteItem","favItem","method","headers","credentials","body","JSON","stringify","favorite","deleteFavoriteItem","getFavoriteItem","FavoriteButton","_ref2","item","isFavorite","favOnChange","_jsx","Tooltip","title","children","Button","shape","icon","StarFilled","StarOutlined","onClick","e","stopPropagation","message","success","catch","err","error","MenuItem","_ref","items","loggedIn","map","Menu","Item","_jsxs","style","display","alignItems","justifyContent","width","minWidth","flex","marginRight","broadcaster_name","href","url","target","rel","whiteSpace","overflow","textOverflow","color","includes","flexShrink","position","zIndex","SubMenu","Favorites","favoriteItems","displayDrawer","setDisplayDrawer","useState","videos","streams","clips","_Fragment","type","onFavoriteClick","Drawer","placement","visible","onClose","onDrawerClose","mode","defaultOpenKeys","height","borderRight","selectable","EyeOutlined","YoutubeOutlined","VideoCameraOutlined","Register","displayModal","setDisplayModal","signupOnClick","Modal","onCancel","handleCancel","footer","destroyOnClose","Form","name","initialValues","remember","onFinish","register","preserve","rules","required","Input","prefix","UserOutlined","placeholder","LockOutlined","htmlType","Login","onSuccess","signinOnClick","credential","formData","FormData","append","username","password","login","Password","Header","Layout","PageHeader","signoutOnClick","signinOnSuccess","favoriteOnChange","Row","justify","Col","CustomSearch","searchOnClick","SearchOutlined","marginLeft","marginTop","game_name","TabPane","Tabs","tabKeys","renderCardTitle","favs","arguments","length","undefined","isFav","find","fav","twitch_id","favOnClick","renderCardGrid","List","grid","xs","sm","md","lg","xl","dataSource","renderItem","Card","alt","src","thumbnail_url","replace","Home","resources","favVideos","favStreams","favClips","defaultActiveKey","tab","forceRender","Content","Sider","App","setLoggedIn","setFavoriteItems","topGames","setTopGames","setResources","useEffect","className","onSelect","key","label","LikeOutlined","FireOutlined","game","box_art_url","borderRadius","mapTopGamesToProps","padding","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.670e9907.chunk.js","sourcesContent":["const loginUrl = `/login`;\r\n\r\nexport const login = (credential) => {\r\n  const formData = new FormData();\r\n  formData.append(\"username\", credential.username);\r\n  formData.append(\"password\", credential.password);\r\n\r\n  return fetch(loginUrl, {\r\n    method: \"POST\",\r\n    credentials: \"include\",\r\n    body: formData,\r\n  }).then((response) => {\r\n    if (response.status !== 204) {\r\n      throw Error(\"Fail to log in\");\r\n    }\r\n  });\r\n};\r\n\r\nconst registerUrl = `/register`;\r\n\r\nexport const register = (data) => {\r\n  return fetch(registerUrl, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  }).then((response) => {\r\n    if (response.status !== 200) {\r\n      throw Error(\"Fail to register\");\r\n    }\r\n  });\r\n};\r\n\r\nconst logoutUrl = `/logout`;\r\n\r\nexport const logout = () => {\r\n  return fetch(logoutUrl, {\r\n    method: \"POST\",\r\n    credentials: \"include\",\r\n  }).then((response) => {\r\n    if (response.status !== 204) {\r\n      throw Error(\"Fail to log out\");\r\n    }\r\n  });\r\n};\r\n\r\nconst topGamesUrl = `/game`;\r\n\r\nexport const getTopGames = () => {\r\n  return fetch(topGamesUrl).then((response) => {\r\n    if (response.status !== 200) {\r\n      throw Error(\"Fail to get top games\");\r\n    }\r\n\r\n    return response.json();\r\n  });\r\n};\r\n\r\nconst getGameDetailsUrl = `/game?game_name=`;\r\n\r\nconst getGameDetails = (gameName) => {\r\n  return fetch(`${getGameDetailsUrl}${gameName}`).then((response) => {\r\n    if (response.status !== 200) {\r\n      throw Error(\"Fail to find the game\");\r\n    }\r\n\r\n    return response.json();\r\n  });\r\n};\r\n\r\nconst searchGameByIdUrl = `/search?game_id=`;\r\n\r\nexport const searchGameById = (gameId) => {\r\n  return fetch(`${searchGameByIdUrl}${gameId}`).then((response) => {\r\n    if (response.status !== 200) {\r\n      throw Error(\"Fail to find the game\");\r\n    }\r\n    return response.json();\r\n  });\r\n};\r\n\r\nexport const searchGameByName = (gameName) => {\r\n  return getGameDetails(gameName).then((data) => {\r\n    if (data && data[0].id) {\r\n      return searchGameById(data[0].id);\r\n    }\r\n\r\n    throw Error(\"Fail to find the game\");\r\n  });\r\n};\r\n\r\nconst favoriteItemUrl = `/favorite`;\r\n\r\nexport const addFavoriteItem = (favItem) => {\r\n  return fetch(favoriteItemUrl, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"include\",\r\n    body: JSON.stringify({ favorite: favItem }),\r\n  }).then((response) => {\r\n    if (response.status !== 200) {\r\n      throw Error(\"Fail to add favorite item\");\r\n    }\r\n  });\r\n};\r\n\r\nexport const deleteFavoriteItem = (favItem) => {\r\n  return fetch(favoriteItemUrl, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"include\",\r\n    body: JSON.stringify({ favorite: favItem }),\r\n  }).then((response) => {\r\n    if (response.status !== 200) {\r\n      throw Error(\"Fail to delete favorite item\");\r\n    }\r\n  });\r\n};\r\n\r\nexport const getFavoriteItem = () => {\r\n  return fetch(favoriteItemUrl, {\r\n    credentials: \"include\",\r\n  }).then((response) => {\r\n    if (response.status !== 200) {\r\n      throw Error(\"Fail to get favorite item\");\r\n    }\r\n\r\n    return response.json();\r\n  });\r\n};\r\n\r\nconst getRecommendedItemsUrl = `/recommendation`;\r\n\r\nexport const getRecommendations = () => {\r\n  return fetch(getRecommendedItemsUrl, {\r\n    credentials: \"include\",\r\n  }).then((response) => {\r\n    if (response.status !== 200) {\r\n      throw Error(\"Fail to get recommended item\");\r\n    }\r\n\r\n    return response.json();\r\n  });\r\n};\r\n","import { Menu, Button, Tooltip, message } from \"antd\";\r\nimport { StarFilled, StarOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport { addFavoriteItem, deleteFavoriteItem } from \"../utils\";\r\n\r\nfunction MenuItem({ items, loggedIn, favOnChange }) {\r\n  return items?.map((item) => (\r\n    <Menu.Item key={item.id}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          width: \"100%\",\r\n          minWidth: 0, // Important for text truncation\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            minWidth: 0,\r\n            marginRight: \"24px\",\r\n          }}\r\n        >\r\n          <Tooltip title={`${item.broadcaster_name} - ${item.title}`}>\r\n            <a\r\n              href={item.url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              style={{\r\n                display: \"block\",\r\n                whiteSpace: \"nowrap\",\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                color: item.url.includes(\"videos\") ? \"inherit\" : \"#1890ff\",\r\n              }}\r\n            >\r\n              {`${item.broadcaster_name} - ${item.title}`}\r\n            </a>\r\n          </Tooltip>\r\n        </div>\r\n\r\n        {loggedIn && (\r\n          <div\r\n            style={{\r\n              flexShrink: 0,\r\n              position: \"relative\",\r\n              zIndex: 1,\r\n            }}\r\n          >\r\n            <FavoriteButton\r\n              item={item}\r\n              favOnChange={favOnChange}\r\n              isFavorite={true}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Menu.Item>\r\n  ));\r\n}\r\n\r\nfunction FavoriteButton({ item, isFavorite, favOnChange }) {\r\n  const handleFavoriteClick = (e) => {\r\n    e.stopPropagation();\r\n    if (isFavorite) {\r\n      deleteFavoriteItem(item)\r\n        .then(() => {\r\n          favOnChange();\r\n          message.success(\"Removed from favorites\");\r\n        })\r\n        .catch((err) => {\r\n          message.error(err.message);\r\n        });\r\n    } else {\r\n      addFavoriteItem(item)\r\n        .then(() => {\r\n          favOnChange();\r\n          message.success(\"Added to favorites\");\r\n        })\r\n        .catch((err) => {\r\n          message.error(err.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tooltip\r\n      title={isFavorite ? \"Remove from favorite list\" : \"Add to favorite list\"}\r\n    >\r\n      <Button\r\n        shape=\"circle\"\r\n        icon={isFavorite ? <StarFilled /> : <StarOutlined />}\r\n        onClick={handleFavoriteClick}\r\n      />\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport default MenuItem;\r\n","import React, { useState } from \"react\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { Menu, Button, Drawer } from \"antd\";\r\nimport {\r\n  EyeOutlined,\r\n  YoutubeOutlined,\r\n  VideoCameraOutlined,\r\n  StarFilled,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nfunction Favorites({ favoriteItems, loggedIn, favOnChange }) {\r\n  const [displayDrawer, setDisplayDrawer] = useState(false);\r\n  const { videos, streams, clips } = favoriteItems;\r\n\r\n  const onDrawerClose = () => {\r\n    setDisplayDrawer(false);\r\n  };\r\n\r\n  const onFavoriteClick = () => {\r\n    setDisplayDrawer(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"primary\"\r\n        shape=\"round\"\r\n        onClick={onFavoriteClick}\r\n        icon={<StarFilled />}\r\n      >\r\n        My Favorites\r\n      </Button>\r\n      <Drawer\r\n        title=\"My Favorite videos\"\r\n        placement=\"right\"\r\n        width={720}\r\n        visible={displayDrawer}\r\n        onClose={onDrawerClose}\r\n      >\r\n        <Menu\r\n          mode=\"inline\"\r\n          defaultOpenKeys={[\"streams\"]}\r\n          style={{ height: \"100%\", borderRight: 0 }}\r\n          selectable={false}\r\n        >\r\n          <SubMenu key={\"streams\"} icon={<EyeOutlined />} title=\"Streams\">\r\n            <MenuItem\r\n              items={streams}\r\n              loggedIn={loggedIn}\r\n              favOnChange={favOnChange}\r\n            />\r\n          </SubMenu>\r\n          <SubMenu key={\"videos\"} icon={<YoutubeOutlined />} title=\"Videos\">\r\n            <MenuItem\r\n              items={videos}\r\n              loggedIn={loggedIn}\r\n              favOnChange={favOnChange}\r\n            />\r\n          </SubMenu>\r\n          <SubMenu key={\"clips\"} icon={<VideoCameraOutlined />} title=\"Clips\">\r\n            <MenuItem\r\n              items={clips}\r\n              loggedIn={loggedIn}\r\n              favOnChange={favOnChange}\r\n            />\r\n          </SubMenu>\r\n        </Menu>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Favorites;\r\n","import { Button, Form, Input, message, Modal } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { register } from \"../utils\";\r\n\r\nfunction Register() {\r\n  const [displayModal, setDisplayModal] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setDisplayModal(false);\r\n  };\r\n\r\n  const signupOnClick = () => {\r\n    setDisplayModal(true);\r\n  };\r\n\r\n  const onFinish = (data) => {\r\n    register(data)\r\n      .then(() => {\r\n        setDisplayModal(false);\r\n        message.success(\"Successfully signed up\");\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button shape=\"round\" type=\"primary\" onClick={signupOnClick}>\r\n        Register\r\n      </Button>\r\n      <Modal\r\n        title=\"Register\"\r\n        visible={displayModal}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n        destroyOnClose={true}\r\n      >\r\n        <Form\r\n          name=\"normal_register\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          preserve={false}\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n          >\r\n            <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n          >\r\n            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"first_name\"\r\n            rules={[\r\n              { required: true, message: \"Please input your Firstname!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"firstname\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"last_name\"\r\n            rules={[{ required: true, message: \"Please input your Lastname!\" }]}\r\n          >\r\n            <Input placeholder=\"lastname\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Register\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import { Button, Form, Input, message, Modal } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { login } from \"../utils\";\r\n\r\nfunction Login({ onSuccess }) {\r\n  const [displayModal, setDisplayModal] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setDisplayModal(false);\r\n  };\r\n\r\n  const signinOnClick = () => {\r\n    setDisplayModal(true);\r\n  };\r\n\r\n  const onFinish = (data) => {\r\n    login(data)\r\n      .then(() => {\r\n        setDisplayModal(false);\r\n        message.success(`Welcome back`);\r\n        onSuccess();\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        shape=\"round\"\r\n        onClick={signinOnClick}\r\n        style={{ marginRight: \"20px\" }}\r\n      >\r\n        Login\r\n      </Button>\r\n      <Modal\r\n        title=\"Log in\"\r\n        visible={displayModal}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n        destroyOnClose={true}\r\n      >\r\n        <Form name=\"normal_login\" onFinish={onFinish} preserve={false}>\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n          >\r\n            <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n          >\r\n            <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Login\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { Layout, Row, Col, Button } from 'antd'\r\nimport Favorites from './Favorites'\r\nimport Register from './Register'\r\nimport Login from './Login'\r\nimport React from 'react'\r\n\r\n\r\nconst { Header } = Layout\r\n\r\n\r\nfunction PageHeader({ loggedIn, signoutOnClick, signinOnSuccess, favoriteItems,favoriteOnChange }) {\r\n  return (\r\n    <Header>\r\n      <Row justify='space-between'>\r\n        <Col>\r\n          {loggedIn && <Favorites favoriteItems={favoriteItems} loggedIn = {loggedIn} favOnChange={favoriteOnChange} />}\r\n        </Col>\r\n        <Col>\r\n          {loggedIn && <Button shape=\"round\" onClick={signoutOnClick}>Logout</Button>}\r\n          {!loggedIn && (\r\n            <>\r\n              <Login onSuccess={signinOnSuccess} />\r\n              <Register />\r\n            </>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Header>\r\n  )\r\n}\r\n\r\n\r\nexport default PageHeader","import React, { useState } from \"react\";\r\nimport { searchGameByName } from \"../utils\";\r\nimport { message, Button, Modal, Form, Input } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nfunction CustomSearch({ onSuccess }) {\r\n  const [displayModal, setDisplayModal] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setDisplayModal(false);\r\n  };\r\n\r\n  const searchOnClick = () => {\r\n    setDisplayModal(true);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    searchGameByName(data.game_name)\r\n      .then((data) => {\r\n        setDisplayModal(false);\r\n        onSuccess(data);\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        shape=\"round\"\r\n        onClick={searchOnClick}\r\n        icon={<SearchOutlined />}\r\n        style={{ marginLeft: \"20px\", marginTop: \"20px\" }}\r\n      >\r\n        Custom Search\r\n      </Button>\r\n      <Modal\r\n        title=\"Search\"\r\n        visible={displayModal}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n      >\r\n        <Form name=\"custom_search\" onFinish={onSubmit}>\r\n          <Form.Item\r\n            name=\"game_name\"\r\n            rules={[{ required: true, message: \"Please enter a game name\" }]}\r\n          >\r\n            <Input placeholder=\"Game name\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Search\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomSearch;\r\n","import React from \"react\";\r\nimport { Button, Card, List, message, Tabs, Tooltip } from \"antd\";\r\nimport { StarOutlined, StarFilled } from \"@ant-design/icons\";\r\nimport { addFavoriteItem, deleteFavoriteItem } from \"../utils\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst tabKeys = {\r\n  Streams: \"stream\",\r\n  Videos: \"videos\",\r\n  Clips: \"clips\",\r\n};\r\n\r\nconst processUrl = (url) =>\r\n  url\r\n    .replace(\"%{height}\", \"252\")\r\n    .replace(\"%{width}\", \"480\")\r\n    .replace(\"{height}\", \"252\")\r\n    .replace(\"{width}\", \"480\");\r\n\r\nconst renderCardTitle = (item, loggedIn, favs = [], favOnChange) => {\r\n  const title = `${item.broadcaster_name} - ${item.title}`;\r\n\r\n  const isFav = favs.find((fav) => fav.twitch_id === item.twitch_id);\r\n\r\n  const favOnClick = () => {\r\n    if (isFav) {\r\n      deleteFavoriteItem(item)\r\n        .then(() => {\r\n          favOnChange();\r\n        })\r\n        .catch((err) => {\r\n          message.error(err.message);\r\n        });\r\n\r\n      return;\r\n    }\r\n\r\n    addFavoriteItem(item)\r\n      .then(() => {\r\n        favOnChange();\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loggedIn && (\r\n        <Tooltip\r\n          title={isFav ? \"Remove from favorite list\" : \"Add to favorite list\"}\r\n        >\r\n          <Button\r\n            shape=\"circle\"\r\n            icon={isFav ? <StarFilled /> : <StarOutlined />}\r\n            onClick={favOnClick}\r\n          />\r\n        </Tooltip>\r\n      )}\r\n      <div style={{ overflow: \"hidden\", textOverflow: \"ellipsis\", width: 450 }}>\r\n        <Tooltip title={title}>\r\n          <span>{title}</span>\r\n        </Tooltip>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\r\n  return (\r\n    <List\r\n      grid={{\r\n        xs: 1,\r\n        sm: 2,\r\n        md: 4,\r\n        lg: 4,\r\n        xl: 6,\r\n      }}\r\n      dataSource={data}\r\n      renderItem={(item) => (\r\n        <List.Item style={{ marginRight: \"20px\" }}>\r\n          <Card title={renderCardTitle(item, loggedIn, favs, favOnChange)}>\r\n            <a\r\n              href={item.url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n            >\r\n              <img\r\n                alt=\"Placeholder\"\r\n                src={processUrl(item.thumbnail_url)}\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n              />\r\n            </a>\r\n          </Card>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst Home = ({ resources, loggedIn, favoriteItems, favoriteOnChange }) => {\r\n  const { videos, streams, clips } = resources;\r\n  const {\r\n    videos: favVideos,\r\n    streams: favStreams,\r\n    clips: favClips,\r\n  } = favoriteItems;\r\n\r\n  return (\r\n    <Tabs defaultActiveKey={tabKeys.Streams}>\r\n      <TabPane tab=\"Streams\" key={tabKeys.Streams} forceRender={true}>\r\n        {renderCardGrid(streams, loggedIn, favStreams, favoriteOnChange)}\r\n      </TabPane>\r\n      <TabPane tab=\"Videos\" key={tabKeys.Videos} forceRender={true}>\r\n        {renderCardGrid(videos, loggedIn, favVideos, favoriteOnChange)}\r\n      </TabPane>\r\n      <TabPane tab=\"Clips\" key={tabKeys.Clips} forceRender={true}>\r\n        {renderCardGrid(clips, loggedIn, favClips, favoriteOnChange)}\r\n      </TabPane>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout, message, Menu } from \"antd\";\r\nimport { LikeOutlined, FireOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  logout,\r\n  getFavoriteItem,\r\n  getTopGames,\r\n  searchGameById,\r\n  getRecommendations,\r\n} from \"./utils\";\r\nimport PageHeader from \"./components/PageHeader\";\r\nimport CustomSearch from \"./components/CustomSearch\";\r\nimport Home from \"./components/Home\";\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nfunction App() {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [favoriteItems, setFavoriteItems] = useState([]);\r\n  const [topGames, setTopGames] = useState([]);\r\n  const [resources, setResources] = useState({\r\n    videos: [],\r\n    streams: [],\r\n    clips: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getTopGames()\r\n      .then((data) => {\r\n        setTopGames(data);\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  }, []);\r\n\r\n  const signinOnSuccess = () => {\r\n    setLoggedIn(true);\r\n    getFavoriteItem().then((data) => {\r\n      setFavoriteItems(data);\r\n    });\r\n  };\r\n\r\n  const signoutOnClick = () => {\r\n    logout()\r\n      .then(() => {\r\n        setLoggedIn(false);\r\n        message.success(\"Successfully Signed out\");\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  };\r\n\r\n  const customSearchOnSuccess = (data) => {\r\n    setResources(data);\r\n  };\r\n\r\n  const onGameSelect = ({ key }) => {\r\n    if (key === \"recommendation\") {\r\n      getRecommendations().then((data) => {\r\n        setResources(data);\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    searchGameById(key).then((data) => {\r\n      setResources(data);\r\n    });\r\n  };\r\n\r\n  const favoriteOnChange = () => {\r\n    getFavoriteItem()\r\n      .then((data) => {\r\n        setFavoriteItems(data);\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  };\r\n\r\n  const mapTopGamesToProps = (topGames) => [\r\n    {\r\n      label: \"Recommend for you!\",\r\n      key: \"recommendation\",\r\n      icon: <LikeOutlined />,\r\n    },\r\n    {\r\n      label: \"Popular Games\",\r\n      key: \"popular_games\",\r\n      icon: <FireOutlined />,\r\n      children: topGames.map((game) => ({\r\n        label: game.name,\r\n        key: game.id,\r\n        icon: (\r\n          <img\r\n            alt=\"placeholder\"\r\n            src={game.box_art_url\r\n              .replace(\"{height}\", \"40\")\r\n              .replace(\"{width}\", \"40\")}\r\n            style={{ borderRadius: \"50%\", marginRight: \"20px\" }}\r\n          />\r\n        ),\r\n      })),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <PageHeader\r\n          loggedIn={loggedIn}\r\n          signoutOnClick={signoutOnClick}\r\n          signinOnSuccess={signinOnSuccess}\r\n          favoriteItems={favoriteItems}\r\n          favoriteOnChange={favoriteOnChange}\r\n        />\r\n      </Header>\r\n      <Layout>\r\n        <Sider width={300} className=\"site-layout-background\">\r\n          <CustomSearch onSuccess={customSearchOnSuccess} />\r\n          <Menu\r\n            mode=\"inline\"\r\n            onSelect={onGameSelect}\r\n            style={{ marginTop: \"10px\" }}\r\n            items={mapTopGamesToProps(topGames)}\r\n          />\r\n        </Sider>\r\n        <Layout style={{ padding: \"24px\" }}>\r\n          <Content\r\n            className=\"site-layout-background\"\r\n            style={{\r\n              padding: 24,\r\n              margin: 0,\r\n              height: 800,\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Home\r\n              resources={resources}\r\n              loggedIn={loggedIn}\r\n              favoriteOnChange={favoriteOnChange}\r\n              favoriteItems={favoriteItems}\r\n            />\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}